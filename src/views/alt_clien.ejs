<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>CRUD</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" 
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
</head>

<body>
    <nav class="navbar navbar-dark  bg-dark">
        <a href="/" class="navbar-brand">Prestamo</a><!--en lace que va a llevar a la ruta inicial del servido -->
    </nav> 

<!--<pre> <%data[0].Id %></pre> //con esto se puede mostrar los datos, se tienen objetos dentro de un arreglo, "data[0]"maneja 
    La posicion del dato, ".Id " maneja que dato quieres ver-->

    <div class="container">
        <div class="row mt-5"> <!--margen top -->
            <div class="col-md-7">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr><!--cabecera de la tabla-->
                            <th>No.</th>
                            <th>No. Control</th>
                            <th>Nombres</th>
                            <th>Carrera</th>
                            <th>Turno</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- se tiene que recorer un arreglo, se utiliza un "ciclo for" para  saber si hay datos, 
                        si los hay se van a mostrar encaso de que no los tenga puede ocurrir un error.
                        1. se valida hay datos 
                        NOTA: esta seccion hace un recorrido  de "data" datos almacenados en la base de datos -->
                        
                                <!--sintaxis de EJS-->
                        <% if (data) {  %> <!--si tenemos dato-->
                            <% for (var i=0; i < data.length; i++) { %><!--desde el indice 0, hasta que se menor de la longitud de los datos-->
                                <!--aqui se hace el recorrido de los datos, para obtener cada datos-->
                                <tr>
                                    <td><%= (i + 1) %></td>
                                    <td><%= data[i].No_Control %></td><!--el igual despues de "%" interprete los datos y 
                                        no solo JS, mostar datos en pantalla-->
                                        
                                    <td><%= data[i].Nombres %></td>
                                    <td><%= data[i].Carrera %></td>
                                    <td><%= data[i].Turno %></td>
                                    <td>
                                        <a href= "/delete/<%= data[i].Id_alt %>" class="btn btn-danger">Delete</a><!--para poder eliminar 
                                        un dato, es necesario saber cual se va a  elimiar. se tienen que hacer una concatenacion con 
                                        el id de la celda, lo siguiente nos dara el numero ese numero "<%= data[i].Id_alt %>"-->
                                        
                                        <a href= "/update/<%= data[i].Id_alt %>" class="btn btn-info">Actualizar</a>
                                    </td>
                                </tr>
                            <% } %>
                        <% } %>
                    </tbody>
                </table>
            </div> 
            <div class="col-md-3">  
                

                <form action= "/add" method="post"> <!-- se diseÃ±a el fomulario sin clase, si va a llevar action 
                va llevar a algun lugar en este caso "/add" esta ruta se tendra que crearse en el servidor atravez del
                metodo post (method="post"), por lo general un formulario manda datos desde el navegador al servidor-->
                                            <!--FORMULARIO (front end)-->
                <div class="form-group">
                    <div class name='formulario guardar'>
                    <input type ="text"   name="Nombres"          placeholder="Nombres"     class="form-control">  
                    <input type ="text"   name="Ap_Paterno"       placeholder="A. Paterno"  class="form-control"> 
                    <input type ="text"   name="Ap_Paterno"       placeholder="A. Paterno"  class="form-control">
                    <input type ="text"   name="Ap_Materno"       placeholder="A. Materno"  class="form-control">
                    <input type ="number" name="Carrera"          placeholder="Carrera"     class="form-control">
                    <input type ="number" name="Turno"            placeholder="Turno"       class="form-control">
                    <input type ="number" name="No_Control"       placeholder="No_Control"  class="form-control">
                    
                    <button type="submit" class="btn btn-primary">
                        saver
                    </button>
                    <!--<a href= 'http://localhost:3000/update/:Id_alt' class="btn btn-info">Actualizar</a>-->
                    
                    <a href= "/turno" class="btn btn-info">Turno</a>
                    </div> 
                </div>   
                
            <!--para recibir los datos en  navegador manda los datos al servidor convierte en formato de objeto 
            y asi insertarlos en la base de datos. por el moento el servidor no va a enter lo datos y es necesario
            configurarlo en app.js seccion setting-->

                </form>
            </div> 
        </div>
    </div>   
</body>
</html>